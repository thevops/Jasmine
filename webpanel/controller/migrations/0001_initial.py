# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-12-04 13:52
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'groups',
                'verbose_name': 'group',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dns_name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('ip_address', models.GenericIPAddressField(protocol='IPv4', unique=True)),
                ('description', models.TextField()),
                ('last_seen', models.DateTimeField(null=True)),
                ('synchronization_period', models.PositiveSmallIntegerField()),
            ],
            options={
                'verbose_name_plural': 'hosts',
                'verbose_name': 'host',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Group')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Host')),
            ],
            options={
                'verbose_name_plural': 'hosts <-> groups',
                'verbose_name': 'host <-> groups',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.TextField()),
                ('configuration', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'module',
                'verbose_name': 'module',
            },
        ),
        migrations.CreateModel(
            name='Statuse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'statuses',
                'verbose_name': 'status',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('description', models.TextField()),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Module')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.Host')),
            ],
            options={
                'verbose_name_plural': 'tasks',
                'verbose_name': 'task',
            },
        ),
        migrations.AddField(
            model_name='host',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='controller.Statuse'),
        ),
        migrations.AddField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(through='controller.Membership', to='controller.Host'),
        ),
    ]
